name: test and deploy

on:
  push:
    branches: [ "main" ]

jobs:
  laravel-tests:

    runs-on: ubuntu-latest
    environment: production

    steps:
    - uses: shivammathur/setup-php@15c43e89cdef867065b0213be354c2841860869e
      with:
        php-version: '8.3'
    - uses: actions/checkout@v4
    - name: Copy .env
      run: php -r "file_exists('.env') || copy('.env.example', '.env');"
    - name: Update Composer
      run: composer update
    - name: Install Dependencies
      run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist
    - name: Generate key
      run: php artisan key:generate
    - name: Directory Permissions
      run: chmod -R 777 storage bootstrap/cache
    - name: Create Database
      run: |
        mkdir -p database
        touch database/database.sqlite
    - name: Set up Node
      uses: actions/setup-node@v4
      with:
        node-version: 22
        cache: 'npm'
    - name: Install Node Dependencies
      run: npm install
    - name: build assets
      run: npm run build
    - name: Execute tests (Unit and Feature tests) via PHPUnit/Pest
      env:
        DB_CONNECTION: sqlite
        DB_DATABASE: database/database.sqlite
      run: php artisan test

  deploy:
    runs-on: ubuntu-latest
    needs: laravel-tests

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.EC2_SSH_KEY }}

      - name: Deploy Application
        run: |
          ssh -o StrictHostKeyChecking=no ec2-user@${{ secrets.EC2_HOST }} << 'EOF'
          sudo su ${{ secrets.EXEC_USER }}
          cd ${{ secrets.APP_PATH }}
          git pull origin main
          composer install --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist
          php artisan migrate --force
          php artisan optimize:clear
          php artisan optimize
          php artisan view:cache
          composer dump-autoload --optimize(-o)

          npm install
          npm run build
          exit
          sudo systemctl restart php-fpm
          sudo systemctl restart httpd
          EOF